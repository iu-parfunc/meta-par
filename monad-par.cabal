Name:                monad-par
Version:             0.2.2
Synopsis:            A library for parallel programming based on a monad

-- Version history:
--  0.1      : First release
--  0.1.0.1  : 
--  0.1.0.2  : 
--  0.1.1.0  : module reorganization, moving ParClass

--  0.2      : Bumped for new class-based API
--  0.2.1    : Bumped for change AList
--  0.2.2    : incorporation of real deque package
--  0.2.3    : Restricted module export for 0.2 release.


Description:         This library offers an alternative parallel programming
                     API to that provided by the @parallel@ package.

                     A 'Par' monad allows the simple description of
                     parallel computations, and can be used to add
                     parallelism to pure Haskell code.  The basic API
                     is straightforward: the monad supports forking
                     and simple communication in terms of 'IVar's.

                     The library comes with a work-stealing
                     implementation, but the internals are also
                     exposed so that you can build your own scheduler
                     if necessary.

                     Examples of use can be found in the examples/ directory
                     of the source package.

                     The modules below provide additionaly schedulers,
                     data structures, and other added capabilities
                     layered on top of the 'Par' monad.

                       * Foo
                       * Bar


Homepage:            https://github.com/simonmar/monad-par
License:             BSD3
License-file:        LICENSE
Author:              Simon Marlow
Maintainer:          Simon Marlow <marlowsd@gmail.com>
Copyright:           (c) Simon Marlow 2011
Stability:           Experimental
Category:            Control,Parallelism,Monads
Build-type:          Simple
Cabal-version:       >=1.8

extra-source-files:
     examples/benchlist.txt
     examples/benchmark.hs
     examples/blackscholes_data.hs
     examples/blackscholes.hs
     examples/cholesky.hs
     examples/cholesky_matrix6.dat
     examples/coins.hs
     examples/common.mk
     examples/distributed/builddist.sh
     examples/distributed/config
     examples/distributed/parfib_dist.hs
     examples/distributed/rundist.sh
     examples/distributed/rundist_logged.sh
     examples/distributed/test.sh
     examples/distributed/testdist.sh
     examples/distributed/worker/config
     examples/get_cholesky_data.sh
     examples/Makefile
     examples/mandel.hs
     examples/matmult/ListAux.hs
     examples/matmult/Makefile
     examples/matmult/MatMult.hs
     examples/matmult/matmult.stdout
     examples/Microbench/README.md
     examples/Microbench/embarrassingly_par.hs
     examples/Microbench/parMapReduceRange.hs
     examples/minimax/Board.hs
     examples/minimax/Game.hs
     examples/minimax/Main.hs
     examples/minimax/Makefile
     examples/minimax/minimax.stdout
     examples/minimax/Prog.hs
     examples/minimax/Tree.hs
     examples/minimax/Wins.hs
     examples/nbody.hs
     examples/ntimes
     examples/ntimes_minmedmax
     examples/parfib_monad.hs
     examples/parfib_pseq.hs
     examples/partree/Makefile
     examples/partree/partree.hs
     examples/partree/Tree.hs
     results/plot_scaling.hs
     examples/PortablePixmap.lhs
     examples/primes.hs
     examples/queens.hs
     examples/quicksort/parquicksort_monad.hs
     examples/quicksort/parquicksort_pseq.hs
--     examples/run_tests.sh
     examples/stream/DEVLOG.txt
     examples/stream/disjoint_working_sets_pipeline.hs
     examples/stream/fft_pipeline.hs
     examples/stream/Makefile
     examples/stream/simple1_measureSrc.hs
     examples/sumeuler/ListAux.hs
     examples/sumeuler/Makefile
     examples/sumeuler/SumEuler.hs
     examples/sumeuler/SumEulerPrimes.hs
     examples/timeout.sh
     tests/AllTests.hs
     tests/ParTests.hs
     tests/AListTest.hs
     tests/Makefile			
     tests/Test_ContReaderT.hs
     tests/Test_ReaderContT.hs
     Control/Monad/Par/Stream.hs
     results/Makefile
     results/README.md
     results/ScriptHelpers.hs
     results/characterize_machine.sh
     results/meta_summary.hs
     results/perflog.txt
     results/plot_ALL.hs
     results/plot_scaling.hs

Library
  Exposed-modules: 
                 -- The classic, simple monad-par interface:
                   Control.Monad.Par

                 -- A class generalizing different levels of monad-par functionality:
                 , Control.Monad.Par.Class

                 -- A class providing unsafe functionality:
                 , Control.Monad.Par.Unsafe

                 -- A collection of combinators for common parallel
                 -- patterns and data structure traversals:
                 , Control.Monad.Par.Combinator

                 -- This is the default scheduler:
                 , Control.Monad.Par.Scheds.Trace
                 , Control.Monad.Par.Scheds.TraceInternal

                 -- This scheduler uses sparks rather than IO threads.
                 -- It only supports Futures, not full IVars:
                 , Control.Monad.Par.Scheds.Sparks


  Build-depends: base >= 4 && < 5
-- The parallel package currently requires deepseq 1.1:
--               , deepseq >= 1.1 && < 1.2
               , deepseq >= 1.2
               , HUnit >= 1.2 
--               , QuickCheck <= 2
               , QuickCheck 
               , rdtsc >= 1.1.3.1
               , split >= 0.1.2.3
               , carray >= 0.1.5
               , array >= 0.3
               , random >= 1.0.0
               , transformers >= 0.2.2.0
               , vector
               , containers >= 0.4.2.0
               , mtl >= 2.0.1.0
               , parallel >= 3.1
               , abstract-deque >= 0.1.4
--               , chaselev-deque
--               , hashtables >= 1.0.0.0
               -- For DistDirect:
               , binary >= 0.5
               , unix >= 2.5
               , remote
  -- NOTE!  These dependencies DO NOT include all dependencies required
  -- by the examples/benchmarks.  Run "make deps" in the examples
  -- directory.


  ghc-options: -O2
  Other-modules:

               ------------------------------------------------------------
               --                Schedulers & Infrastructure             --
               ------------------------------------------------------------

               -- Replacement scheduler for Trace, not exposing yet:
                 Control.Monad.Par.Scheds.Direct

               -- Strawman scheduler that forks IO threads:
               , Control.Monad.Par.Scheds.ContFree

               -- Internal logging framework:
               , Control.Monad.Par.Logging

               -- Serial Elision is currently experimental:
               , Control.Monad.Par.Scheds.SerialElision


               ------------------------------------------------------------
               --                   Data Structures                      -- 
               ------------------------------------------------------------

               -- ILists are internal:
               , Control.Monad.Par.IList

               -- RRN: Not exposing Streams or OpenLists yet.  Need to improve performance.
               , Control.Monad.Par.OpenList
               , Control.Monad.Par.Stream

               -- Unifinished, in addition to streams, we want associative key-value structures:
--               , Control.Monad.Par.IMap

                -- Channels: Also not ready for primetime quite yet:
               , Control.Monad.Par.Chan

               -- More compact representation for [Bool]:
               , Data.BitList

               -- AList should probably be internal.  Needs more testing and tuning:
               , Control.Monad.Par.AList 

               ------------------------------------------------------------
               --                      Par Add-ons                       -- 
               ------------------------------------------------------------

               -- State is generally useful, should expose this soon:
               , Control.Monad.Par.State

               -- Pedigree is experimental, but potentially useful for
               -- many purposes such as assigning unique, reproducable
               -- identifiers to IVars
               , Control.Monad.Par.Pedigree

               -- Deterministic RNG should be released as soon as its tested more.
               , Control.Monad.Par.RNG


Test-Suite test-monad-par
    type:       exitcode-stdio-1.0
    main-is:    tests/AllTests.hs
    ghc-options: -itests -rtsopts -threaded
    build-depends: QuickCheck, HUnit, time
                 , test-framework, test-framework-th
                 , test-framework-hunit, test-framework-quickcheck2
